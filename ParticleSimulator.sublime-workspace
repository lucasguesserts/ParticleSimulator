{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fil",
				"fileName"
			],
			[
				"N",
				"NormalForceViscoelasticSpheres"
			],
			[
				"is",
				"is_same"
			],
			[
				"ge",
				"generate_triplets"
			],
			[
				"Tr",
				"Triplet1"
			],
			[
				"Int",
				"Interactions"
			],
			[
				"type",
				"type_list"
			],
			[
				"In",
				"Interactions"
			],
			[
				"inde",
				"index_limit"
			],
			[
				"get",
				"get_combination"
			],
			[
				"typ",
				"type_list"
			],
			[
				"make",
				"make_constant_index_sequence_Test"
			],
			[
				"check",
				"check"
			],
			[
				"type_",
				"type_list"
			],
			[
				"Ele",
				"ElectricCharge"
			],
			[
				"Pro",
				"PropertyTypes"
			],
			[
				"P",
				"PhysicalEntity"
			],
			[
				"par",
				"particlePair"
			],
			[
				"Subject",
				"SubjectType"
			],
			[
				"bol",
				"bool_type"
			],
			[
				"Proper",
				"PropertyList"
			],
			[
				"t",
				"typename"
			],
			[
				"PRo",
				"Property"
			],
			[
				"Property",
				"Property"
			],
			[
				"inc",
				"include"
			],
			[
				"S",
				"Subjects"
			],
			[
				"stat",
				"static_assert"
			],
			[
				"chec",
				"check"
			],
			[
				"con",
				"conditional"
			],
			[
				"size",
				"size_t"
			],
			[
				"Tan",
				"TangentialForceCundallStrack"
			],
			[
				"NormalF",
				"NormalForceLinearDashpotForce"
			],
			[
				"ela",
				"elasticModulus1"
			],
			[
				"E",
				"ElasticModulus"
			],
			[
				"Normal",
				"normalDissipativeConstant2"
			],
			[
				"Fri",
				"FrictionParameter"
			],
			[
				"tan",
				"tangentialDamping1"
			],
			[
				"fri",
				"frictionParameter1"
			],
			[
				"Che",
				"checkEqual"
			],
			[
				"posi",
				"position1"
			],
			[
				"char",
				"charge1"
			],
			[
				"ps",
				"position1"
			],
			[
				"Vec",
				"Vector3D"
			],
			[
				"x",
				"xComponent"
			],
			[
				"is_",
				"is_subset_of"
			],
			[
				"Test",
				"TestCase"
			],
			[
				"Us",
				"Us"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "project(ScriptSystemLibTest)\n\nset(Dependencies UtilsLib ScriptSystem)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories (${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\n\nfile (GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/source/*.cpp)\n\nadd_executable (${PROJECT_NAME} ${${PROJECT_NAME}_sources})\n\nforeach (Dependency ${Dependencies})\n\ttarget_link_libraries (${PROJECT_NAME} ${Dependency})\nendforeach ()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tRUNTIME DESTINATION\tapps\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "ScriptSystemLibTest/CMakeLists.txt",
			"file_size": 586,
			"file_write_time": 131485808200749352,
			"settings":
			{
				"buffer_size": 540,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "project(InteractionLibTest)\n\nset(Dependencies UtilsLib PropertyLib EntityLib InteractionLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories(${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\n\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/*.cpp)\n\nadd_executable(${PROJECT_NAME} ${${PROJECT_NAME}_sources})\n\nforeach(Dependency ${Dependencies})\n\ttarget_link_libraries(${PROJECT_NAME} ${Dependency})\nendforeach()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tRUNTIME DESTINATION\tapps\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "InteractionLibTest/CMakeLists.txt",
			"file_size": 650,
			"file_write_time": 131485750626331664,
			"settings":
			{
				"buffer_size": 550,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(CollidingSpheres)\n\ninclude_directories(${CMAKE_SOURCE_DIR}/EntityLib/include)\ninclude_directories(${CMAKE_SOURCE_DIR}/InteractionLib/include)\ninclude_directories(${CMAKE_SOURCE_DIR}/IOLib/include)\ninclude_directories(${CMAKE_SOURCE_DIR}/PropertyLib/include)\ninclude_directories(${CMAKE_SOURCE_DIR}/SimulationLib/include)\ninclude_directories(${CMAKE_SOURCE_DIR}/UtilsLib/include)\n\n#LINK DIRECTORIES\nlink_directories(${CMAKE_SOURCE_DIR}/EntityLib/source)\nlink_directories(${CMAKE_SOURCE_DIR}/InteractionLib/source)\nlink_directories(${CMAKE_SOURCE_DIR}/IOLib/source)\nlink_directories(${CMAKE_SOURCE_DIR}/PropertyLib/source)\nlink_directories(${CMAKE_SOURCE_DIR}/SimulationLib/source)\nlink_directories(${CMAKE_SOURCE_DIR}/UtilsLib/source)\n\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/*.cpp)\n\nadd_executable(${PROJECT_NAME} ${${PROJECT_NAME}_sources})\n\ntarget_link_libraries(${PROJECT_NAME} EntityLib)\ntarget_link_libraries(${PROJECT_NAME} InteractionLib)\ntarget_link_libraries(${PROJECT_NAME} IOLib)\ntarget_link_libraries(${PROJECT_NAME} PropertyLib)\ntarget_link_libraries(${PROJECT_NAME} SimulationLib)\ntarget_link_libraries(${PROJECT_NAME} UtilsLib)\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tRUNTIME DESTINATION\tapps\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "CollidingSpheres/CMakeLists.txt",
			"file_size": 1382,
			"file_write_time": 131467743925173092,
			"settings":
			{
				"buffer_size": 1282,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(EntityLib)\n\nset(Dependencies UtilsLib PropertyLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories (${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\ninclude_directories(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include)\n\n#SEARCH FOR .CPP AND .H FILES\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.hpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.tpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/source/*.cpp)\n\n#ADD LIBRARY\nadd_library(${PROJECT_NAME} STATIC ${${PROJECT_NAME}_sources} ${${PROJECT_NAME}_headers})\n\nforeach (Dependency ${Dependencies})\n\ttarget_link_libraries (${PROJECT_NAME} ${Dependency})\nendforeach ()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tLIBRARY DESTINATION libs\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "EntityLib/CMakeLists.txt",
			"file_size": 913,
			"file_write_time": 131485745056870531,
			"settings":
			{
				"buffer_size": 852,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(EntityLibTest)\n\nset(Dependencies UtilsLib EntityLib PropertyLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories (${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\n\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/*.cpp)\n\nadd_executable(${PROJECT_NAME} ${${PROJECT_NAME}_sources})\n\nforeach(Dependency ${Dependencies})\n\ttarget_link_libraries(${PROJECT_NAME} ${Dependency})\nendforeach()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tRUNTIME DESTINATION\tapps\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "EntityLibTest/CMakeLists.txt",
			"file_size": 631,
			"file_write_time": 131485750330097191,
			"settings":
			{
				"buffer_size": 531,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(IOLib)\n\nset(Dependencies UtilsLib PropertyLib EntityLib InteractionLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories (${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\ninclude_directories(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include)\n\n#SEARCH FOR .CPP AND .H FILES\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.hpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.tpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/source/*.cpp)\n\n#ADD LIBRARY\nadd_library(${PROJECT_NAME} STATIC ${${PROJECT_NAME}_sources} ${${PROJECT_NAME}_headers})\n\nforeach (Dependency ${Dependencies})\n\ttarget_link_libraries (${PROJECT_NAME} ${Dependency})\nendforeach ()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tLIBRARY DESTINATION libs\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "IOLib/CMakeLists.txt",
			"file_size": 934,
			"file_write_time": 131485746979249670,
			"settings":
			{
				"buffer_size": 873,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(IOLibTest)\n\nset(Dependencies UtilsLib PropertyLib EntityLib InteractionLib IOLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories (${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\n\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/*.cpp)\n\nadd_executable(${PROJECT_NAME} ${${PROJECT_NAME}_sources})\n\nforeach(Dependency ${Dependencies})\n\ttarget_link_libraries(${PROJECT_NAME} ${Dependency})\nendforeach()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tRUNTIME DESTINATION\tapps\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "IOLibTest/CMakeLists.txt",
			"file_size": 648,
			"file_write_time": 131485750396572274,
			"settings":
			{
				"buffer_size": 548,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(InteractionLib)\n\nset(Dependencies UtilsLib PropertyLib EntityLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories(${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\ninclude_directories(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include)\n\n#SEARCH FOR .CPP AND .H FILES\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.hpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.tpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/source/*.cpp)\n\n#ADD LIBRARY\nadd_library(${PROJECT_NAME} STATIC ${${PROJECT_NAME}_sources} ${${PROJECT_NAME}_headers})\n\nforeach (Dependency ${Dependencies})\n\ttarget_link_libraries (${PROJECT_NAME} ${Dependency})\nendforeach ()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tLIBRARY DESTINATION libs\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "InteractionLib/CMakeLists.txt",
			"file_size": 927,
			"file_write_time": 131485750684332273,
			"settings":
			{
				"buffer_size": 866,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(PropertyLib)\n\nset(Dependencies UtilsLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories (${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\ninclude_directories(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include)\n\n#SEARCH FOR .CPP AND .H FILES\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.hpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.tpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/source/*.cpp)\n\n#ADD LIBRARY\nadd_library(${PROJECT_NAME} STATIC ${${PROJECT_NAME}_sources} ${${PROJECT_NAME}_headers})\n\nforeach (Dependency ${Dependencies})\n\ttarget_link_libraries (${PROJECT_NAME} ${Dependency})\nendforeach ()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tLIBRARY DESTINATION libs\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "PropertyLib/CMakeLists.txt",
			"file_size": 903,
			"file_write_time": 131485748369396542,
			"settings":
			{
				"buffer_size": 842,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(PropertyLibTest)\n\nset(Dependencies UtilsLib PropertyLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories (${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\n\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/*.cpp)\n\nadd_executable(${PROJECT_NAME} ${${PROJECT_NAME}_sources})\n\nforeach(Dependency ${Dependencies})\n\ttarget_link_libraries(${PROJECT_NAME} ${Dependency})\nendforeach()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tRUNTIME DESTINATION\tapps\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "PropertyLibTest/CMakeLists.txt",
			"file_size": 623,
			"file_write_time": 131485750473934375,
			"settings":
			{
				"buffer_size": 523,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(ScriptSystemLib)\n\nset(Dependencies UtilsLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories(${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\ninclude_directories(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include)\n\n#SEARCH FOR .CPP AND .H FILES\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.hpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/source/*.cpp)\n\n#ADD LIBRARY\nadd_library(${PROJECT_NAME} STATIC ${${PROJECT_NAME}_sources} ${${PROJECT_NAME}_headers})\n\nforeach(Dependency ${Dependencies})\n\ttarget_link_libraries(${PROJECT_NAME} ${Dependency})\nendforeach ()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tLIBRARY DESTINATION libs\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "ScriptSystemLib/CMakeLists.txt",
			"file_size": 822,
			"file_write_time": 131485804168230423,
			"settings":
			{
				"buffer_size": 750,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "project(SimulationLib)\n\nset(Dependencies UtilsLib PropertyLib EntityLib InteractionLib IOLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories(${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\ninclude_directories(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include)\n\n#SEARCH FOR .CPP AND .H FILES\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.hpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.tpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/source/*.cpp)\n\n#ADD LIBRARY\nadd_library(${PROJECT_NAME} STATIC ${${PROJECT_NAME}_sources} ${${PROJECT_NAME}_headers})\n\nforeach (Dependency ${Dependencies})\n\ttarget_link_libraries (${PROJECT_NAME} ${Dependency})\nendforeach ()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tLIBRARY DESTINATION libs\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "SimulationLib/CMakeLists.txt",
			"file_size": 947,
			"file_write_time": 131485750703295317,
			"settings":
			{
				"buffer_size": 886,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(SimulationLibTest)\n\nset(Dependencies UtilsLib PropertyLib EntityLib InteractionLib IOLib SimulationLib)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories(${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\n\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/*.cpp)\n\nadd_executable(${PROJECT_NAME} ${${PROJECT_NAME}_sources})\n\nforeach(Dependency ${Dependencies})\n\ttarget_link_libraries(${PROJECT_NAME} ${Dependency})\nendforeach()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tRUNTIME DESTINATION\tapps\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "SimulationLibTest/CMakeLists.txt",
			"file_size": 669,
			"file_write_time": 131485750021614291,
			"settings":
			{
				"buffer_size": 569,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "project(UtilsLib)\n\nset(Dependencies)\n\nforeach(Dependency ${Dependencies})\n\tinclude_directories(${CMAKE_SOURCE_DIR}/${Dependency}/include)\nendforeach()\ninclude_directories(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include)\n\n#SEARCH FOR .CPP AND .H FILES\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.hpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_headers ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/*.tpp)\nfile(GLOB_RECURSE ${PROJECT_NAME}_sources ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/source/*.cpp)\n\n#ADD LIBRARY\nadd_library(${PROJECT_NAME} STATIC ${${PROJECT_NAME}_sources} ${${PROJECT_NAME}_headers})\n\nforeach (Dependency ${Dependencies})\n\ttarget_link_libraries (${PROJECT_NAME} ${Dependency})\nendforeach ()\n\ninstall(\n\tTARGETS ${PROJECT_NAME}\n\tLIBRARY DESTINATION libs\n\tARCHIVE DESTINATION archives\n)\n",
			"file": "UtilsLib/CMakeLists.txt",
			"file_size": 890,
			"file_write_time": 131485751304403703,
			"settings":
			{
				"buffer_size": 829,
				"line_ending": "Unix"
			}
		},
		{
			"file": "UtilsLibTest/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 607,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ScriptSystemLibTest/source/TestScriptSystem.cpp",
			"settings":
			{
				"buffer_size": 3133,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "ScriptSystemLib/source/SSParser.cpp",
			"settings":
			{
				"buffer_size": 1581,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 96.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"clan",
				"Clang Format: Format Selection"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLibTest",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/PropertyLibTest",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/include",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/source",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLibTest",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLibTest/source"
	],
	"file_history":
	[
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/source/SSParserNode.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/source/SSParser.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLibTest/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/CMakeLists.txt",
		"/home/ruancomelli/.bash_aliases",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/include/SSParser.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/include/SSParserNode.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLibTest/source/TestScriptSystem.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLibTest/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/SharedPointer.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/FileSystem.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/GeometryLib/include/Sphere.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/source/StringUtils.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/StringUtils.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLib/include/SphericalParticlePtrArrayKit.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLib/source/SphericalParticlePtrArrayKit.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLibTest/InteractionLibTest.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/doubts/newProperties_pseudo-test.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLibTest/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLibTest/testUtilsLib.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLibTest/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/PropertyLibTest/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/PropertyLibTest/PropertyLibTest.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLibTest/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLibTest/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLibTest/EntityLibTest.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/PropertyLib/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLib/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLibTest/IOLibTest.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemTest/retrieving.string",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemTest/test.example",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/include/SSParser.h",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemTest/source/TestScriptSystem.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemTest/CMakeLists.txt",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/include/MathExpressionParser.h",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ScriptSystemLib/source/MathExpressionParser.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLib/include/FileReader.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/ScriptSystemTest/test.example",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/AppGeomechanics_2D/source/main.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLib/include/vectorIO.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLib/include/vectorIO.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLib/include/FileReader.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/IOLib/source/FileReader.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/MuParserLib/include/muParser.h",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/MuParserLib/include/muParserBase.h",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/ScriptSystemLib/include/SSParser.h",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/ScriptSystemLib/include/MathExpressionParser.h",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/ScriptSystemLib/include/SSParserNode.h",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/ScriptSystemLib/source/SSParser.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/ScriptSystemLib/source/SSParserNode.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/ScriptSystemTest/source/TestScriptSystem.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLibTest/testSimulation.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/include/Simulation.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/include/SeekerDefinitions/CollisionSeeker.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/include/Simulation.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/source/Simulation.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/include/CommandLineParser.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/source/ProgramOptions.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/ProgramOptions.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/source/CommandLineParser.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Vector.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Vector.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/source/InteractionDefinitions/NormalForceLinearDashpotForce.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/source/InteractionDefinitions/NormalForceViscoelasticSpheres.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/source/InteractionDefinitions/TangentialForceCundallStrack.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/source/InteractionDefinitions/TangentialForceHaffWerner.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/source/FileSystem.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/ElectrostaticForce.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/include/InteractionSubjectLister.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/include/InteractionSubjectLister.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/source/InteractionDefinitions/ElectrostaticForce.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/source/SphericalParticle.cpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/purge.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/type_collection.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/include/PhysicalEntity.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/type_list.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/purge.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/combinatory.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/combinatory.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/metaprogramming.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ParticleSimulator.sublime-project",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/ParticleSimulator.sublime-workspace",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/include/MP/InteractionSubjectLister.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/concatenate.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/metafunction.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/get.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/length.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/type_list.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/type_collection.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/sfinae_true.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/bool_type.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/include/PhysicalEntity.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/TangentialForceHaffWerner.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/TangentialForceHaffWerner.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/TangentialForceCundallStrack.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/TangentialForceCundallStrack.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/NormalForceViscoelasticSpheres.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/NormalForceLinearDashpotForce.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/NormalForceViscoelasticSpheres.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/NormalForceLinearDashpotForce.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/InteractionDefinitions/ElectrostaticForce.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/InteractionLib/include/Interaction.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/MP/make_unique_type_list.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Metaprogramming/bool_type.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/include/SphericalParticle.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Metaprogramming/type_list.tpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Metaprogramming/type_list.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/include/Particle.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/include/HandledEntity.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/include/SocialEntity.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/include/FixedInfinitePlane.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/include/Boundary.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/EntityLib/include/FixedBoundary.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Metaprogramming/traits/type_list.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Foreach.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/PropertyLib/include/Property.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Metaprogramming/type_collection.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Metaprogramming/sfinae_true.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/UtilsLib/include/Metaprogramming/traits/type_collection.hpp",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/ParticleSimulator/SimulationLib/source/SimulationFileTree.cpp",
		"/home/ruancomelli/.bashrc",
		"/home/ruancomelli/Readme",
		"/run/media/ruancomelli/D0108C41108C3110/ruancomelli/Git-Projects/EFVLib_dev/EFVLib/GridLib/CMakeLists.txt"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"<open folders>,-_build/,-build/",
			"<open folders>,-_build/"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"#DEFINE OUTPUT LOCATION\\n",
			"#LINK LIBRARIES\\n",
			"#ADD EXECUTABLE\\n",
			"#SEARCH FOR .CPP FILES\\n",
			"#INCLUDE DIRECTORIES\\n",
			"#INCLUDE DIRECTORIES",
			"Parser(",
			"right",
			"left",
			"SharedPointer<",
			"script_system",
			"SCRIPT_SYSTEM_PARSER_NODE_H",
			"SCRIPT_SYSTEM_PARSER_H",
			"Simulation",
			"GLOB",
			"std::ostream",
			"> Container",
			"inputFile",
			"outputFile",
			"string",
			"simulation",
			"Simulation",
			"parseCommandLine",
			"I",
			"B",
			"A",
			"T",
			"name",
			"PhysicalEntity",
			"1",
			"0",
			"generate_list",
			"type_list",
			"apply",
			"purge",
			"apply<",
			"purge_apply",
			"apply",
			"pairs",
			"interact_generate_list",
			"bool",
			"int",
			"size_t",
			"combinatory",
			"<cstddef>",
			"std::size_t",
			"2",
			"size2",
			"size1",
			"2",
			"J",
			"std::size_t",
			"T",
			"std::size_t",
			"std",
			"1",
			"size_t",
			"T",
			"bool",
			"char",
			"double",
			"int",
			"type_list",
			"typename",
			"length",
			"I",
			"typename",
			"type_list",
			"get_type",
			"get",
			"using",
			"T",
			"ndices",
			"get_list",
			"COMBINE_HPP",
			"Metaprogramming",
			"TangentialForceCundallStrack",
			"NormalForceViscoelasticSpheres",
			"NormalForceLinearDashpotForce",
			"Particle",
			"ElectrostaticForce",
			"FrictionParameter",
			"TangentialKappa",
			"P1",
			"P",
			"bool_type",
			"PhysicalEntityModel",
			"Property",
			"unsigned",
			"std::size_t",
			"unsigned",
			"Particles",
			"INTERACTION_SUBJECT_LISTER_HPP",
			"CXX_ST",
			"static",
			"HPP",
			"particle",
			"overlap",
			"dissipativeConstant",
			"DissipativeConstant",
			"Normal",
			"normal",
			"Normal",
			"normal",
			"ormal",
			"ElasticModulus",
			"Position",
			"position",
			"Position",
			"ElasticModulus",
			"elasticModulus",
			"ElasticModulus",
			"normalDissipativeConstant",
			"position",
			"1",
			"(elasticModulus",
			"ElasticModulus",
			"elasticModulus",
			"1",
			"elasticModulus",
			"min",
			"get",
			"TangentialDamping",
			"get",
			"0",
			"getGeometricParameter",
			"->",
			"bool"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"\\b",
			"shared_ptr<",
			"size_t",
			"get",
			"std::bool_constant",
			"PhysicalEntity"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 14,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ScriptSystemLibTest/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 540,
						"regions":
						{
						},
						"selection":
						[
							[
								7,
								7
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "InteractionLibTest/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 550,
						"regions":
						{
						},
						"selection":
						[
							[
								458,
								458
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "CollidingSpheres/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1282,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "EntityLib/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 852,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "EntityLibTest/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 531,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "IOLib/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 873,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "IOLibTest/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 548,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "InteractionLib/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 866,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "PropertyLib/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 842,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "PropertyLibTest/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 523,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "ScriptSystemLib/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 750,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "SimulationLib/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 886,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "SimulationLibTest/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 569,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "UtilsLib/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 829,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "UtilsLibTest/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 607,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "ScriptSystemLibTest/source/TestScriptSystem.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3133,
						"regions":
						{
						},
						"selection":
						[
							[
								117,
								117
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "ScriptSystemLib/source/SSParser.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1581,
						"regions":
						{
						},
						"selection":
						[
							[
								1416,
								1416
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ParticleSimulator.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 297.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
